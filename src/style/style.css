@import url('https://fonts.googleapis.com/css?family=Manrope:700|Manrope:400');
:root {
    --text: hsl(0, 0%, 99%);
    --textDim: hsl(0, 0%, 60%);
    --background: hsl(0, 0%, 7%);
    --primary: hsl(155, 100%, 65%);
    --primaryBg: hsla(155, 100%, 65%, 1%);
    --primaryHi: hsla(155, 100%, 75%, 25%);
    --primaryFg: hsl(155, 100%, 85%);
    --secondary: hsl(156, 51%, 14%);
    --secondaryFg: hsl(156, 51%, 75%);
    --secondaryBg: hsla(156, 51%, 14%, 5%);
    --secondaryHi: hsla(156, 51%, 30%, 50%);
    --accent: hsl(155, 100%, 94%);
    --accentBg: hsla(155, 100%, 94%, 0.01);
    --accentHi: hsla(155, 100%, 100%, 25%);
    --failure: hsl(0, 100%, 65%);;
    --speed: 10s;
    --transition: 0.2s;
}
*,
*:after,
*:before {
    box-sizing: border-box;
}
body {
    font-family: 'Manrope';
    font-weight: 400;
    background-color: var(--background);
    color: var(--text);
    padding: 0 10%;
    height: 100vh;
    overflow: hidden;    
}
main {
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
} 
/* nav */
nav { 
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    z-index: 9999;
}
nav ul {
    display: flex;
    flex-direction: row;  
    align-items: center;
    gap: 2rem;
    box-sizing: border-box;
    list-style: none;
}
.navLi, .siteName {   
    color: var(--textDim);
    text-decoration: none;
}
.navLi:hover {
    color: var(--text);
    cursor: pointer;
}
.siteName {
    font-weight: bold;
}
.materialIcons {
    display: none;
    fill: var(--text);
}
/* fin nav */
/* svg grid */
.grid {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    align-self: center;
    z-index: -1;
}
.gridSvg {
    height: 80%;
    width: 80%;
    position: relative;
    z-index: 1;
}
.blur {
    height: 12rem;
    width: 12rem;
    background-color: var(--primary);
    filter: blur(100px);
    border-radius: 100px;
    z-index: 0;
    position: absolute;
}
/* fin svg grid */
/* home + error404 */
h1 {
    margin: 0;
}
h1,.errorPage  {
    font-size: 10rem;
    font-weight: 700;
    letter-spacing: -0.8rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-self: center;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);   
    z-index: 100;
}
h1 > span,.errorPage > p {
    margin: 0;
    line-height: 10rem;
    width: auto;
}
h1 > span:nth-child(1){
    align-self: flex-start;
}
h1 > span:nth-child(2){
    color: var(--primary);
    align-self: flex-end;
}
h1 > span:nth-child(3){
    align-self: flex-end;
}
.errorPage > p:nth-child(2){
    color: var(--primary);
    align-self: center;
}
.errorBtn {
    align-self: center;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-decoration: none;
    color: inherit;
    cursor: pointer;
    height: 50px;
    width: 160px;
    z-index: 9999;
    transform: translateY(25px);
    transition: all 0.2s ease;
}
.button {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: absolute;
    text-decoration: none;
    color: inherit;
    cursor: pointer;
    height: 50px;
    width: 160px;
    z-index: 9999;
}
button{
    height: 50px;
    width: 160px;
    border: none;
    border-radius: 13px;
    background-color: var(--primaryBg);
    box-shadow: 0px -3px 15px 0px var(--primaryHi) inset;
    color: var(--primaryFg);
    font-family: "Manrope";
    font-size: 1rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: absolute;
    transform: translateY(0px);
    transition: all 0.2s ease;
}
.spanLight {
    width: 100px;
    height: 60px;
    background-color: var(--primaryHi);
    border-radius: 100%;
    filter: blur(20px);
    position: absolute;
    bottom: -50%;
    transition: all 0.2s ease;
}
.button:hover > span,.errorBtn:hover > span {
    opacity: 60%; 
}
.button:hover > button,.errorBtn:hover > button, .cvDownloadBtn:hover {
    transform: translateY(5px);   
}
.first {
    top: 15%;
    left: 28%;
}
.second {
    top: 21%;
    right: 20%;
}
.second > button {
    background-color: var(--accentBg);
    box-shadow: 0px -3px 15px 0px var(--accentHi) inset;
    color: var(--accentFg);
}
.second > span {
    background-color: var(--accentHi);
}
.third {
    bottom: 20%;
    left: 17%;
}
.third > button {
    background-color: var(--accentBg);
    box-shadow: 0px -3px 15px 0px var(--accentHi) inset;
    color: var(--accentFg);
}
.third > span {
    background-color: var(--accentHi);    
}
.fourth {
    bottom: 10%;
    right: 11%;
}
.fourth > button {
    background-color: var(--secondaryBg); 
    box-shadow: 0px -3px 15px 0px var(--secondary) inset;      
    color: var(--secondaryFg);
}
.fourth > span {
    background-color: var(--secondaryHi);
}
/* fin home + error404 */
/* svg background */
.topRight {
    position: absolute;
    top: 0;
    right: 0;
    z-index: -1;
    opacity: 50%;
}
.bottomLeft {
    position: absolute;
    bottom: 0;
    left: 0;
    z-index: -1;
    opacity: 50%;
}
/* fin svg background */
/* about */
.cvDownload {   
    margin-top: 3rem; 
    align-self: baseline;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.25ch;
}
.cvDownloadBtn {   
    position: unset;
    width: 50px;
    height: 50px;
    border-radius: 5px;
    background-color: var(--secondary);
    box-shadow: 0px -3px 15px 0px var(--primaryHi) inset;
    transition: all 0.2s ease;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
}
.cvDownloadBtn svg {
    width: 80%;
    color: var(--text);
}
/* fin about */
/* stacks */    
article {   
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);  
    width: 100%;
    height: 60%;
    overflow: hidden;
    max-width: min(calc(600px + 8rem), calc(100vw - 2rem));   
    display: flex; 
    flex-direction: column;
    align-items: center;
}
h2 {
    display: flex;
    gap: 0.25ch;
    font-size: 3rem;
    margin: 0;
    grid-column: 1 / -1;
    color: var(--primary);
    align-self: flex-start;
}  
.header {
    margin-bottom: 3rem;
    display: flex;
    flex-direction: column;
    align-items: center;
}    
.window {
    height: 250px;
    width: 80%;
}  
.scene {
    --buff: 3rem;
    height: 100%;
    width: 100%;      
    background: var(--background);      
    mask:
        linear-gradient(transparent, white var(--buff) calc(100% - var(--buff)), transparent),
        linear-gradient(90deg, transparent, white var(--buff) calc(100% - var(--buff)), transparent);
    mask-composite: intersect;
    -webkit-mask-composite: intersect;
}
.gridStack {
    --count: 6; /* The number of items you have */
    --inset: 0; /* Controls the grid animation offset on entry/exit */
    --outset: 2.5;
    height: 100%;
    width: 100%;
    margin: 0;
    list-style-type: none;
    position: relative;
    display: grid;
    padding: 0 1rem;
    grid-template-columns: 1fr 1fr;
    gap: 0 2rem;
    /*	3D translation */
    transform:
        rotateX(15deg)
        rotateZ(-15deg)
        skewX(15deg);
}  
.gridStack li {
    min-height: 60px;
    transform-style: preserve-3d;
    width: 100%;
    z-index: calc(1 + var(--active));
}
.gridStack li::before {
    content: "";
    position: absolute;
    inset: 4px 4px -2px -2px;
    border-radius: 6px;
    background: hsl(0 0% 0% / 0.1);
    filter: blur(calc(var(--active, 0) * 8px));
    z-index: -1;
    transform-origin: 50% 0;
    scale: 1 calc(1 + (var(--active, 0) * 0.05));
    --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    box-shadow: 0 0 #0000, 0 0 #0000, var(--tw-shadow);
}  
.gridStack:hover li {
    animation-play-state: paused;
}    
.item {
    align-items: center;
    background: var(--accentBg);
    border: 1px solid var(--accentBg);
    color: var(--text);
    border-radius: 6px;
    cursor: pointer;
    display: flex;
    gap: 1rem;
    height: 100%;
    justify-content: start;
    overflow: hidden;
    padding: 1.25rem;
    text-align: center;
    width: 100%;
    transition: transform var(--transition), scale var(--transition), background-color 0.25s, color 0.25s, border 0.25s, box-shadow 0.25s;;
    scale: calc(1 + (var(--active, 0) * 0.05));
    transform: translate3d(0, 0, calc(var(--active, 0) * 24px));    
}
.itemIcon {
    width: 24px;
    color: var(--primary);
}
.itemText {
    flex: 1;
    text-align: center;
}  
.gridStack li:nth-of-type(1) { --index: 0; }
.gridStack li:nth-of-type(2) { --index: 0; }
.gridStack li:nth-of-type(3) { --index: 1; }
.gridStack li:nth-of-type(4) { --index: 1; }
.gridStack li:nth-of-type(5) { --index: 2; }
.gridStack li:nth-of-type(6) { --index: 2; }
.gridStack li:nth-of-type(7) { --index: 3; }
.gridStack li:nth-of-type(8) { --index: 3; }
.gridStack li:nth-of-type(9) { --index: 4; }
.gridStack li:nth-of-type(10) { --index: 4; }
.gridStack li:nth-of-type(11) { --index: 5; }
.gridStack li:nth-of-type(12) { --index: 5; }
    
@media(prefers-reduced-motion: no-preference) {
    .gridStack {
        gap: 0 2rem;
    }  
    li {
        --duration: calc(var(--speed) * 1);
        --delay: calc((var(--duration) / var(--count)) * (var(--index, 0) - 8));
        animation: slide var(--duration) var(--delay) infinite linear;
        translate: 0% calc(((var(--count) - var(--index)) + var(--inset, 0)) * 100%);
    }
    li:hover {
        --active: 1;
    }
    @keyframes slide {
        100% {
            translate: 0% calc(calc((var(--index) + var(--outset, 0)) * -100%));
        }
    }
    @container (width < 400px) {
        li {
            --duration: calc(var(--speed) * 2);
            --delay: calc((var(--duration) / var(--count)) * (var(--index, 0) - 8));
        }
    }
}
/* fin stacks */
/* projets */
.carouselContainer {
    width: 80%;   
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);     
}  
.carouselSlide {
    position: relative;
    text-align: center;
}  
.carouselImage {
    width: 100%;
    height: 600px; 
    object-fit: cover; 
    border-radius: 5px;

}  
.carouselContent {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    background-color: rgba(0, 0, 0, 0.5);
    color: white;
    padding: 10px;
    border-radius: 5px;
}  
.carouselContent h3 {
    margin: 0;
}
.slick-arrow{
    width: 50px;
    height: 50px;          
}
.slick-arrow::before {
    color: transparent;
}
.slick-prev {
    left: -55px;
}
.slick-prev::before {
    color: transparent;
    font-size: 50px;
    background-image: url('/public/assets/icon/arrow-left-dark.svg')
}
.slick-next {
    right: -55px;
}
.slick-next::before {
    color: transparent;
    font-size: 50px;
    background-image: url('/public/assets/icon/arrow-right-dark.svg')
}
.slick-dots {
    bottom: -30px !important;
}
.dotUl {
    padding: 0;
    margin: 0;
    display: flex;
    justify-content: center;
    gap: 1rem;
}
.dotCarousel{ 
    width: 25px;
    height: 25px;
    padding: 0;
    margin: 0;
    border-radius: 100%;    
    box-sizing: border-box;
    border: 1px solid var(--primary) !important;     
    background-color: var(--primaryHi) !important; 
}
.dotUl li {
    min-width: 25px;
    height: 25px;    
    padding: 0;
    margin: 0;
}
.dotUl .slick-active {
    width: 25px;
    height: 25px;
    padding: 0;
    margin: 0;
    border-radius: 100%;
    animation: pulse 2s infinite;
}
@keyframes pulse {
	0% {
		box-shadow: 0 0 0 0 var(--primary);
	}

	70% {
		box-shadow: 0 0 0 5px var(--primaryBg);
	}

	100% {
	}
}
/* fin projets */
/* Contact page */
#contactForm {
    width: 60%;
    height: 530px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);   
    padding: 10px 20px 30px 20px;
}
#contactForm input,   
#contactForm textarea { 
    font-family: 'Manrope';
    width:100%;
    background: var(--textDim);
    border: 0; 
    border-radius: 4px;
    margin-bottom: 25px;  
    padding: 5px;  
}  
#contactForm input:focus,  
#contactForm textarea:focus {  
    background-color: var(--text); 
}  
#contactForm textarea {
    width:100%;
    height: 150px;
    resize: none;
}
input:required, textarea:required {  
    box-shadow: none;
    -moz-box-shadow: none;  
    -webkit-box-shadow: none;  
    -o-box-shadow: none;  
} 
#contactForm label {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}
#contactForm .required {  
    font-weight: bold;  
    color: var(--text);         
} 
/* Hide success/failure message
    (especially since the php is missing) */
#success {
    color: var(--primary); 
    display:none;  
}
#failure {
    color: var(--failure); 
    display:none;  
}
/* responsive */
/* tablet */
@media screen and (max-width: 1000px) {
    h1  {
      font-size: 4rem;
    }  
    h1 > span {
      line-height: 5rem;
      letter-spacing: -0.3rem;
    }  
    nav ul li > :not(.siteName, .materialIcons) {
      display: none;
    }
    
    nav {
      display: flex;
      align-items: center;
      justify-content: space-between;
    }  
    .materialIcons {
      display: flex;
      align-items: center;
    }
    article { 
      padding: 0 10%;  
      width: 100%;
      height: 80%;
      overflow: hidden;
      max-width: min(calc(600px + 8rem), calc(100vw - 2rem));
    }  
} 
/* mobile  */
@media screen and (max-width: 600px) {
    button {
        height: 40px;
        width: 120px;
        border-radius: 12px;
    }
    .spanLight {
        width: 75px;
        height: 50px;
        bottom: -30%;
    }
    .first {
        top: 12%;
        left: 15%;
    }
    .second {
        right: 15%;
    }
    .third {
        left: 15%;
    }
    .fourth {
        right: 15%;
    }
    .gridSvg {
        height: 80%;
        width: 80%;
        position: relative;
        z-index: 1;
    }
    .blur {
        height: 8rem;
        width: 8rem;
        background-color: var(--primary);
        filter: blur(100px);
        border-radius: 100px;
        z-index: 0;
        position: absolute;
    }
    article { 
        padding: 10%; 
        overflow: scroll;
    } 
    ::-webkit-scrollbar {
        display: none;
    } 
    .header {
        grid-template: auto 1fr / 1fr;
    }
    h2 {
        font-size: 2rem;
        display: flex;
        flex-wrap: wrap;
    }   
    .header p {
        font-size: 1rem;
    }
    .window {
        height: auto;
        width: 100%;
    }
    .gridStack {
        --count: 12;
        --inset: 0;
        --outset: 3;
        grid-template-columns: 1fr;
        transform:
        rotateX(0)
        rotateZ(0)
        skewX(0);
    } 
    .gridStack li:nth-of-type(1) { --index: 0; }
    .gridStack li:nth-of-type(2) { --index: 1; }
    .gridStack li:nth-of-type(3) { --index: 2; }
    .gridStack li:nth-of-type(4) { --index: 3; }
    .gridStack li:nth-of-type(5) { --index: 4; }
    .gridStack li:nth-of-type(6) { --index: 5; }
    .gridStack li:nth-of-type(7) { --index: 6; }
    .gridStack li:nth-of-type(8) { --index: 7; }
    .gridStack li:nth-of-type(9) { --index: 8; }
    .gridStack li:nth-of-type(10) { --index: 9; }
    .gridStack li:nth-of-type(11) { --index: 10; }
    .gridStack li:nth-of-type(12) { --index: 11; }  
    li {
        --duration: calc(var(--speed) * 2);
        --delay: calc((var(--duration) / var(--count)) * (var(--index, 0) - 8));
    }
    .cvDownload {   
        align-self: center;
    }
    .carouselContainer {
        top: 55%;
    }      
    .carouselImage {
        height: 400px; 
    }
    .carouselContent {
        width: 100%;
        bottom: 0;
        font-size: 0.8rem;
        border-radius: 0;
    }
    #contactForm{
        width: 88%;
        top: 60%;
        padding-left: 3%;
        padding-right: 3%;
     } 
    #contactForm input,   
    #contactForm textarea { 
        margin-bottom: 10px; 
    } 
    .submit{
        position: relative;
        width: 100%;
        border-radius: 4px;
    }
}
/* fin responsive */
/* color + theme */

/* :root:has(#theme:checked) :is(body, .controls, .item) {
}
:root:has(#theme:checked) h1 > span:nth-child(2), .errorPage > p:nth-child(2){
   
} */
